pipeline {
    agent { label ' nodejs ' }
    stages {
        stage('Clone master branch and build') {
            steps {
                checkout([$class: 'GitSCM', 
                    branches: [[name: '*/master']], 
                    doGenerateSubmoduleConfigurations: false, 
                    extensions: [[$class: 'RelativeTargetDirectory', 
                                    relativeTargetDir: 'master']], 
                    submoduleCfg: [], 
                    userRemoteConfigs: [[url: 'https://github.com/jncc/peru-mapping.git']]])
                dir('./master') {
                    sh 'node -v'
                    sh 'yarn -v'
                    sh 'yarn'
                    sh 'yarn build'
                }
            }
        }
        stage('Clone deployment branch and push updates to it') {
            steps {
                dir('./gh-pages')  {
                    deleteDir()
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: env.GIT_CREDENTIALS_ID,
                        usernameVariable: 'GIT_USERNAME', passwordVariable: 'GIT_PASSWORD']]) {
                        sh 'git --version'
                        sh 'git config --local credential.helper "!p() { echo username=\\$GIT_USERNAME; echo password=\\$GIT_PASSWORD; }; p"'
                        sh 'git config user.name'
                        sh 'git clone https://github.com/jncc/eo-data-processing.git'
                    }
                }
            }
        }
    }
}
